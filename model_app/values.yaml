# Default values for model_app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# replicaCount: 1

# image:
#   repository: nginx
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# General
imagePullPolicy: IfNotPresent

# Deployments
model_service_depl:
  name: model-service-depl
  app: model-service
  replicas: 1
  container: model-service-container
  image: ghcr.io/remla23-team15/model-service
  version: latest
  port: 8080

model_app_depl:
  name: model-app-depl
  app: model-app
  replicas: 1
  container: model-app-container
  image: ghcr.io/remla23-team15/app
  version: latest
  port: 80

# Services
model_service_serv:
  name: model-service-serv
  app: model-service
  port: 8080

model_app_serv:
  name: model-app-serv
  app: model-app
  port: 80
  targetPort: 80

# Ingresses
app_ingress:
  name: app-ingress

# ConfigMaps
app_config:
  name: app-config
  data: {
    "model.path": "/predict",
    "model.feedback": "/feedback"
  }
